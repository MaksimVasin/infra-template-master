name: Checking_ts_linter
env:
  CAN_BUILD: true;
  TAG_NAME: A;
#  GIT_VAR    : "im git var ${{ github.sha }}"
on: [push]
jobs:
  checking:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
          cache: "npm"
      #- name: install nvm
      #  run: |
      #    sudo apt install curl
      #    curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
      #    source ~/.bashrc
      #    node -v
      #    npm install -g typescript

      - name: npm ci
        run: npm ci

      - name: nmp i
        run: npm i

      - name: Check ts
        run: npm run ts

      - name: Check linter
        run: npm run lint

      - name: Test
        run: npm run test

      - name: TestValue
        run: echo ${{ github.ref_name }} and ${{ github.actor }}

    #- name: Get tag
    #run: |
    #git tag -l
    #echo $?

    #- uses: actions-ecosystem/action-get-latest-tag@v1
    #id: get-latest-tag
    #- name: Can Build
    #if: ${{ env.CAN_BUILD == true }}
    #run: echo "$CAN_BUILD"

  build_release:
    if: ${{ github.ref != '' }}
    runs-on: ubuntu-latest
    needs: [checking]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
          cache: "npm"

      - name: npm ci
        run: npm ci

      - name: nmp i
        run: npm i

      - name: build
        run: npm run build

      - name: post
        env:
          TOKEN: ${{ secrets.TOKEN_YANDEX_TRACKER }}
          ORGID: ${{ secrets.ID_ORG }}
        uses: satak/webrequest-action@v1.2.4
        with:
          url: https://api.tracker.yandex.net/v2/issues/HOMEWORKSHRI-143
          method: PATCH
          payload: '{"summary": "Кросс-проверка Инфраструктура — Васин Максим", "description": "Описание из экшанов с секретом"}'
          headers: '{"Authorization": "OAuth ${{ env.TOKEN }}", "X-Org-ID": "${{ env.ORGID }}"}'
